<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;
use App\Models\BuoiChup;
use Carbon\Carbon;

class BookingCancelController extends Controller
{
    public function cancel(Request $request, string $ma_bc)
    {
        $request->validate([
            'ly_do' => 'required|string|max:255',
        ]);

        $booking = BuoiChup::find($ma_bc);
        if (!$booking) {
            return response()->json(['message' => 'Kh√¥ng t√¨m th·∫•y bu·ªïi ch·ª•p.'], 404);
        }

        // Kh√¥ng cho hu·ª∑ n·∫øu bu·ªïi ch·ª•p ƒë√£ di·ªÖn ra ho·∫∑c ho√†n t·∫•t
        if (in_array($booking->Trang_Thai, ['ƒêang di·ªÖn ra', 'ƒê√£ ho√†n th√†nh'])) {
            return response()->json(['message' => 'Bu·ªïi ch·ª•p ƒë√£ di·ªÖn ra ho·∫∑c ho√†n th√†nh, kh√¥ng th·ªÉ hu·ª∑.'], 400);
        }

        // ‚úÖ T√≠nh th·ªùi gian c√≤n l·∫°i tr∆∞·ªõc bu·ªïi ch·ª•p
        $now = Carbon::now();
        $bat_dau = Carbon::parse($booking->Bat_Dau_Chup);
        $diffHours = $now->diffInHours($bat_dau, false);

        // ‚úÖ T√≠nh s·ªë ti·ªÅn ƒë·∫∑t c·ªçc
        $so_tien_coc = $booking->Tong_Tien * ($booking->Ti_Le_Coc / 100);
        $ti_le_hoan = 1.0;
        $ghi_chu = '';

        // ‚úÖ Ch√≠nh s√°ch ho√†n ti·ªÅn
        if ($diffHours < 24) {
            $ti_le_hoan = 0;
            $ghi_chu = 'Hu·ª∑ trong v√≤ng 24h ‚Äî kh·∫•u tr·ª´ 100% ti·ªÅn c·ªçc.';
        } else {
            $ti_le_hoan = 1.0;
            $ghi_chu = 'Hu·ª∑ tr∆∞·ªõc 24h ‚Äî ho√†n 100% ti·ªÅn c·ªçc.';
        }

        $so_tien_hoan = round($so_tien_coc * $ti_le_hoan, 2);

        DB::transaction(function () use ($booking, $request, $ghi_chu, $so_tien_hoan) {
            // üî∏ C·∫≠p nh·∫≠t tr·∫°ng th√°i bu·ªïi ch·ª•p
            $booking->Trang_Thai = 'ƒê√£ h·ªßy';
            $booking->Ly_Do_Huy = $request->ly_do;
            $booking->save();

            // üî∏ Ghi log v√†o b·∫£ng l·ªãch s·ª≠ giao d·ªãch
            DB::table('lich_su_giao_dich')->insert([
                'Ma_BC' => $booking->Ma_BC,
                'Loai_Giao_Dich' => 'Da huy',
                'Mo_Ta' => "Kh√°ch h√†ng {$booking->Ma_KH} hu·ª∑ bu·ªïi ch·ª•p. {$ghi_chu} L√Ω do: {$request->ly_do}",
                'Ip_Address' => request()->ip(),
                'User_Agent' => request()->header('User-Agent'),
                'Thoi_Gian' => now()
            ]);

            Log::warning("Kh√°ch h√†ng {$booking->Ma_KH} hu·ª∑ bu·ªïi ch·ª•p {$booking->Ma_BC}. {$ghi_chu}");
        });

        return response()->json([
            'status' => 'success',
            'title' => 'Y√™u c·∫ßu hu·ª∑ ƒë√£ ƒë∆∞·ª£c ghi nh·∫≠n',
            'message' => 'Momentia s·∫Ω x·ª≠ l√Ω ho√†n ti·ªÅn theo ch√≠nh s√°ch hu·ª∑.',
            'data' => [
                'ma_buoi_chup' => $booking->Ma_BC,
                'ly_do' => $request->ly_do,
                'thoi_gian_con_lai' => "{$diffHours} gi·ªù tr∆∞·ªõc khi ch·ª•p",
                'tien_coc' => $so_tien_coc,
                'so_tien_hoan' => $so_tien_hoan,
                'ghi_chu' => $ghi_chu,
                'icon' => 'üí∞',
                'canh_bao' => 'Th·ªùi gian x·ª≠ l√Ω ho√†n ti·ªÅn c√≥ th·ªÉ m·∫•t 24‚Äì48 gi·ªù.'
            ]
        ]);
    }
}
